# Configuration for a a ulnoiot system
#

#### Network configuration ####

# Name of accesspoint to create
ULNOIOT_AP_NAME="hainberger_pirklbauer"

# if set to yes, add unique ID from MAC-address as extension to name
# this is good in classes where you teach iot and have multiple gateways
ULNOIOT_AP_ADDID=no

# Its wifi password to use -> TODO: move to secret file
ULNOIOT_AP_PASSWORD="password"

# Channel to run on (set to actual number)
# if set to random, will pick one of 2 3 4 5 7 8 9 10
# ULNOIOT_AP_CHANNEL=9
ULNOIOT_AP_CHANNEL=random

# Hide the essid when this is yes
# Attention, this has no effect on lots of chipsets
# it does works with the built-in wifi of the raspberry pi.
ULNOIOT_AP_HIDDEN=no

# An ethernet-interface to bridge the network to, when creating accesspoint
#ULNOIOT_AP_BRIDGE=eth0

# IP to pick
ULNOIOT_AP_IP="192.168.12.1"

# hostname to export
# if this is empty, it uses the actual hostname
# this name is associated with the IP given in ULNOIOT_AP_IP
ULNOIOT_AP_HOSTNAME="ulnoiotgw"

#### END - Accesspoint configuration ####


#### MQTT configuration ####
# Connect data for local MQTT broker
# if not defined, the same as ULNOIOT_AP_IP
#ULNOIOT_MQTT_HOST="mosquitto-host"

# Username and password for devices to use mqtt
# If user not defined, do not use user authentication
# TODO: auto create a user with this credentials
# TODO: move to secret file
#ULNOIOT_MQTT_USER="homeassistant"
#ULNOIOT_MQTT_PW="secretpw"

# Data to configure an mqtt bridge
#ULNOIOT_MQTT_BRIDGE_HOST="ulno.net"
#ULNOIOT_MQTT_BRIDGE_PORT="8883"
#ULNOIOT_MQTT_BRIDGE_CERTPATH="/etc/ssl/certs"
#ULNOIOT_MQTT_BRIDGE_TOPIC="bridged"
#ULNOIOT_MQTT_BRIDGE_USER="bridgeuser"
#ULNOIOT_MQTT_BRIDGE_PW="secretpw"
#### END MQTT configuration ####

